{
    "version": "0.9.3",
    "tags": "process", 
    "description": "Displays process specific metrics on a source",      
    "command": "truesight-meter init.lua",
    "command_lua": "truesight-meter init.lua",
    "meterVersionRequired": "4.5.0",
    "metrics": [
        "CPU_PROCESS",
        "MEM_PROCESS",
        "OPEN_HANDLES",
        "PROCESS_COUNT"
    ],
    "dashboards": [
        {
            "name": "Process",
            "layout": "d-w=2&d-h=2&d-pad=5&d-light=1&d-bg=none&d-g-CPU_PROCESS=0-0-1-1&d-g-MEM_PROCESS=1-0-1-1&d-g-OPEN_HANDLES=1-1-1-1&d-g-PROCESS_COUNT=0-1-1-1"
        }
    ],
    "paramArray": {
        "itemTitle": [
            "source", "processName", "processArgs", "processPath", "processCwd"
        ],
        "schemaTitle": "Process"
    },
    "paramSchema": [
        {
            "title": "Source",
            "name": "source",
            "description": "The source to append with processName & display in the legend for the CPU & Memory data.",
            "type": "string"  
        },
        {
            "title": "Process Name Regex",
            "name": "processName",
            "description": "A regular expression to match the name of the process. Please input value for at least one of process name, path, cwd or args regex parameter fields",
            "type": "string"
        },
        {
            "title": "Process Path Regex",
            "name": "processPath",
            "description": "A regular expression to match the full path of the process. Please input value for at least one of process name, path, cwd or args regex parameter fields",
            "type": "string"
        },
        {
            "title": "Process CWD Regex",
            "name": "processCwd",
            "description": "A regular expression to match the current working directory of the process. Please input value for at least one of process name, path, cwd or args regex parameter fields",
            "type": "string"
        },
        {
            "title": "Process Args Regex",
            "name": "processArgs",
            "description": "A regular expression to match the arguments of the process. Please input value for at least one of process name, path, cwd or args regex parameter fields",
            "type": "string"
        },
        {
            "title": "Poll Interval (ms)",
            "name": "pollInterval",
            "description": "A number in milisecond to define the poll interval.",
            "type": "number",
            "default": 1000
        },
        {
            "title": "Collect CPU Utilization",
            "name": "isCpuMetricsReq",
            "description": "Check this field if you want CPU utilization data.",
            "type": "boolean",
            "default": true
        },
        {
            "title": "Collect Memory Utilization",
            "name": "isMemMetricsReq",
            "description": "Check this field if you want Memory utilization data.",
            "type": "boolean",
            "default": true
        },
        {
            "title": "Collect Open Handles",
            "name": "isFHMetricsReq",
            "description": "Check this field if you want Open Handles data.",
            "type": "boolean",
            "default": true
        },
        {
            "title": "Reconcile option",
            "name": "reconcile",
            "description": "How to reconcile in the case that multiple processes match.  Set to First Match to use the first matching process, Parent to choose the parent process (useful if process is forked) and Longest running for choosing longest running process",
            "type": {
                "enum": [["All Source Average", "all_source_avg"], ["All Individual Source", "all_ind_source"], ["Longest Running", "longest"], ["First Match", "first"], ["Parent", "parent"]]
            }
        },
        {
            "title": "Logging Level",
            "name": "loglevel",
            "description": "Set the plugin logging level",
            "type": {
                "enum": [["error", "error"], ["warning", "warning"], ["info", "info"], ["debug", "debug"],["critical", "critical"]]
            }
        }
    ]
}
